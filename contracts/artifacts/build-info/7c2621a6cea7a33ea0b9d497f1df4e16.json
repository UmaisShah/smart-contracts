{
	"id": "7c2621a6cea7a33ea0b9d497f1df4e16",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/solidity constructor.sol": {
				"content": "//contstructor function is called only once during deployment\r\npragma solidity ^0.7.5;\r\ncontract Testing{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/solidity constructor.sol": {
				"Testing": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/solidity constructor.sol\":88:114  contract Testing{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/solidity constructor.sol\":88:114  contract Testing{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad744db5cf9cfc80ac8cdafad959e781104671a22c181a0f18aec89062b71bca64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ad744db5cf9cfc80ac8cdafad959e781104671a22c181a0f18aec89062b71bca64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH21 0x4DB5CF9CFC80AC8CDAFAD959E781104671A22C181A 0xF XOR 0xAE 0xC8 SWAP1 PUSH3 0xB71BCA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "88:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ad744db5cf9cfc80ac8cdafad959e781104671a22c181a0f18aec89062b71bca64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH21 0x4DB5CF9CFC80AC8CDAFAD959E781104671A22C181A 0xF XOR 0xAE 0xC8 SWAP1 PUSH3 0xB71BCA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "88:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 114,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad744db5cf9cfc80ac8cdafad959e781104671a22c181a0f18aec89062b71bca64736f6c63430007060033",
									".code": [
										{
											"begin": 88,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 114,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/solidity constructor.sol\":\"Testing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/solidity constructor.sol\":{\"keccak256\":\"0x0ad0ef3ece51eb7ae1dc0cd09b7630609b3ec5da5e15a70fd78f15e996115de0\",\"urls\":[\"bzz-raw://42b4da6e7020d5fdf418b392b8bee0e916cf8e524795a72a33586992fdb847b7\",\"dweb:/ipfs/QmUJZi6625F5aoLD7zTh7Gb9F9yLQQLogGNKKGwyhsFVDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/solidity constructor.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/solidity constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/solidity constructor.sol": {
				"ast": {
					"absolutePath": "contracts/solidity constructor.sol",
					"exportedSymbols": {
						"Testing": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "63:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Testing",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "88:26:0"
						}
					],
					"src": "63:51:0"
				},
				"id": 0
			}
		}
	}
}