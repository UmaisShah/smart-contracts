{
	"id": "4983c693aa0fd3139f8ad25488f9c6da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/solidity basics.sol": {
				"content": "//int for positive & negative numbers\r\n//uint for only positive number\r\n//string for normal strings\r\n//address is for wallet address\r\n\r\npragma solidity ^0.7.5;\r\n\r\ncontract Counter{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/solidity basics.sol": {
				"Counter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/solidity basics.sol\":163:189  contract Counter{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/solidity basics.sol\":163:189  contract Counter{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd9ec71d2a6cefcbd72eddd6e633d15a047ee10fa9db7bdee83439d3ee947a3864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bd9ec71d2a6cefcbd72eddd6e633d15a047ee10fa9db7bdee83439d3ee947a3864736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP15 0xC7 SAR 0x2A PUSH13 0xEFCBD72EDDD6E633D15A047EE1 0xF 0xA9 0xDB PUSH28 0xDEE83439D3EE947A3864736F6C634300070600330000000000000000 ",
							"sourceMap": "163:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bd9ec71d2a6cefcbd72eddd6e633d15a047ee10fa9db7bdee83439d3ee947a3864736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP15 0xC7 SAR 0x2A PUSH13 0xEFCBD72EDDD6E633D15A047EE1 0xF 0xA9 0xDB PUSH28 0xDEE83439D3EE947A3864736F6C634300070600330000000000000000 ",
							"sourceMap": "163:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 163,
									"end": 189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 189,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd9ec71d2a6cefcbd72eddd6e633d15a047ee10fa9db7bdee83439d3ee947a3864736f6c63430007060033",
									".code": [
										{
											"begin": 163,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 163,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 163,
											"end": 189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 163,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 163,
											"end": 189,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/solidity basics.sol\":\"Counter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/solidity basics.sol\":{\"keccak256\":\"0x96d8c1ef23659ede92b116cef03b7804c5ecf142198154854f066c2dbb290e81\",\"urls\":[\"bzz-raw://b3b052bbcd559c5969ac01e1a9c13a692b2e46c50512afbc1952d35056c556fd\",\"dweb:/ipfs/QmUVV2kHnTrzVp9jvG4uJtZEo7ytXJP4pYtcYBe7AULwWu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/solidity basics.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/solidity basics.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/solidity basics.sol": {
				"ast": {
					"absolutePath": "contracts/solidity basics.sol",
					"exportedSymbols": {
						"Counter": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "136:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Counter",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "163:26:0"
						}
					],
					"src": "136:53:0"
				},
				"id": 0
			}
		}
	}
}